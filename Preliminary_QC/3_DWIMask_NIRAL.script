#!/bin/tcsh -f

set nonomatch

set BaseDir = /ASD/Autism/IBIS/EP_infantDS_Studies/
set DATADIR = $BaseDir/Proc_Data
set ProcessDIR = $BaseDir/processing_EPinfDS/dMRI

set DTIestimCMD = /tools/bin_linux64/dtiestim_v1.2.1
set DTIprocCMD = /tools/bin_linux64/dtiprocess_v1.0.3
set unuCMD = /tools/bin_linux64/unu
set DWIConvert = /tools/bin_linux64/DWIConvert_4.5.3
set ImageMathCMD = /tools/bin_linux64/ImageMath_v1.5.0
set SegPostProcessCMD = /tools/bin_linux64/SegPostProcessCLP
set betCMD = /NIRAL/tools/FSL/fsl-6.0.3/bin/bet
set synthStripCMD = /NIRAL/devel/linux/freesurfer_v7.4.0/freesurfer/bin/mri_synthstrip 

#ANTSPyNet settings
#setenv PATH /NIRAL/devel/linux/Anaconda/miniconda-3.8-antspynet/bin:$PATH
#set pythonCmd = /NIRAL/devel/linux/Anaconda/miniconda-3.8-antspynet/bin/python3
setenv PATH /tools/devel/linux/Anaconda/Anaconda3/envs/antspynet/bin:$PATH
set pythonCmd = /tools/devel/linux/Anaconda/Anaconda3/envs/antspynet/bin/python

set FolderPrefix = Brainmask_0.5.7

echo copying old masks if necessary
foreach brainmask ($DATADIR/*/V*/mri/native/dMRI/Brainmask_0.3.9/*mask*_edit.n*)
    
    if (! -e $brainmask) then
	continue
    endif
    
    set dwiFolder = $brainmask:h:h
    set StripFolder = $dwiFolder/$FolderPrefix
    if (! -e $StripFolder) mkdir $StripFolder
    if (! -e $StripFolder/$brainmask:t) then
	echo copying prior brainmask $brainmask
	cp $brainmask $StripFolder
    endif
end


echo "ensure (0,0,0) origin for brain masks"
foreach brainmask ($DATADIR/*/V*/mri/native/dMRI/Brainmask_0.5.7/*mask*_edit.nrrd)
    
    if (! -e $brainmask) then
	continue
    endif

    set originFlag = $brainmask:h/originCheckOK
    if (! -e $originFlag) then
	set originString = ( `unu head $brainmask | grep origin` )
	#echo $originString
	if ( $originString[3] == '(0,0,0)' ) then
	    #echo nothing to do for $brainmask
	else
	    #echo
	    echo setting origin to 0 $brainmask
	    cp $brainmask $brainmask:r_OO.nrrd
	    ImageMath $brainmask:r_OO.nrrd -changeOrig 0,0,0 -outfile $brainmask:r.nii.gz
	    ImageMath $brainmask:r_OO.nrrd -changeOrig 0,0,0 -outfile $brainmask
	endif
	touch $originFlag
    endif
    
end



echo hacking 0.5.7 DWI - double none

foreach DWIfile ($DATADIR/*/V*/mri/native/dMRI/dmriprep_0.5.7/*_101dir_QCed.nrrd)

    set doubleNone = ( `unu head $DWIfile | grep "none none"` )

    if ($#doubleNone > 1) then
    
	echo doubleNone - $DWIfile

	bin_subst.pl "none none" "none" $DWIfile
    endif

end


echo starting DWI brainmasking script

foreach DWIfile ($DATADIR/*/V*/mri/native/dMRI/dmriprep_0.5.7/*_101dir_QCed.nrrd)

    if (! -e $DWIfile) then
	continue
    endif

    set dwiFolder = $DWIfile:h:h
    set StripFolder = $dwiFolder/$FolderPrefix
    if (! -e $StripFolder) mkdir $StripFolder

    set baseName = $StripFolder/$DWIfile:t:s/_101dir_QCed.nrrd//
    set betMask = ${baseName}_brainmask_bet.nii.gz
    set FAMask = ${baseName}_brainmask_FA.nii.gz
    set B0Mask = ${baseName}_brainmask_B0.nii.gz
    set NoRimMask = ${baseName}_brainmask_NoRim.nii.gz
    set SynthStripMask = ${baseName}_brainmask_SynthStrip.nii.gz
#    set betNoRimMask = ${baseName}_brainmask_betNoRim.nii.gz

    # compute unmasked DTI
    set FAtarget = ${baseName}_unmasked_FA.nii.gz
    set dtiImage = $FAtarget:s/_FA/_DTI/:r:r.nrrd
    set idwiImage = $FAtarget:s/_FA/_IDWI/
    set B0Image = $FAtarget:s/_FA/_B0/
    set faImage = $FAtarget
    set mdImage = $FAtarget:s/_FA/_MD/
    set adImage = $FAtarget:s/_FA/_AD/
    set rdImage = $FAtarget:s/_FA/_RD/
    if (! -e $FAtarget) then    
	echo estimating DTI $dtiImage, IDWI - $idwiImage, B0 - $B0Image - no stripping
	$DTIestimCMD --dwi_image $DWIfile -t 0 --tensor_output $dtiImage -m wls --idwi $idwiImage --B0 $B0Image -v --correction nearest
	echo calculating property images
	$DTIprocCMD --dti_image $dtiImage -f $faImage -m $mdImage --saveScalarsAsFloat --outputLargestEigenvalueVolume $adImage --outputRDVolume $rdImage
    endif

    # betMask
    if (! -e $betMask) then
	echo generating bet mask
	$betCMD $B0Image $B0Image:s/_unmasked_B0/_bet_masked_B0/ -m 
	mv $B0Image:s/_unmasked_B0/_bet_masked_B0_mask/ $betMask
	rm $B0Image:s/_unmasked_B0/_bet_masked_B0/
    endif

    #ANTSPyNet mask
    if (! -e $B0Mask) then
	echo generating B0 mask via ANTSPyNet $B0Mask
	set script = $ProcessDIR/runANTSPySingleCase.py
	echo "import tensorflow_probability" >! $script
	echo "import ants" >> $script
	echo "import antspynet" >> $script
	echo "b0 = ants.image_read('$B0Image')" >> $script
	echo "print('doing mask computation')" >> $script
	echo "b0_probability_mask = antspynet.brain_extraction(b0, modality='t2', verbose=True)" >> $script
	echo "b0_mask = ants.threshold_image(b0_probability_mask, 0.5, 1, 1, 0)" >> $script
	echo "print('writing output')" >> $script
	echo "ants.image_write(b0_mask, '$B0Mask')" >> $script
	echo "quit()" >> $script

	echo $pythonCmd runANTSPySingleCase.py
	$pythonCmd runANTSPySingleCase.py

    endif

    #generating the removeRimMask
    if (! -e $NoRimMask && -e $FAtarget) then 
	echo creating noRim mask $NoRimMask $FAtarget $B0Mask $NoRimMask
	./removeRimMask_simple.sh $FAtarget $B0Mask $NoRimMask
    endif

    
    #generate synthStrip mask
    if (! -e $SynthStripMask && -e $adImage && -e $FAtarget) then
	echo DWI Mask via synthstrip $SynthStripMask
	$synthStripCMD -m $SynthStripMask -i $adImage 
    endif

    #compute masked DTI
    set FAtarget = ${baseName}_mask_FA.nii.gz
    if (! -e $FAtarget && -e $NoRimMask) then    
	set dtiImage = $FAtarget:s/_FA/_DTI/:r:r.nrrd
	set idwiImage = $FAtarget:s/_FA/_IDWI/
	set B0Image = $FAtarget:s/_FA/_B0/
	set faImage = $FAtarget
	set mdImage = $FAtarget:s/_FA/_MD/
	set adImage = $FAtarget:s/_FA/_AD/
	set rdImage = $FAtarget:s/_FA/_RD/

	echo estimating DTI $dtiImage, IDWI - $idwiImage, B0 - $B0Image - noRim stripping
	$DTIestimCMD --dwi_image $DWIfile -t 0 --tensor_output $dtiImage -m wls --idwi $idwiImage --B0 $B0Image --correction nearest --brain_mask $NoRimMask
	echo calculating property images
	$DTIprocCMD --dti_image $dtiImage -f $faImage -m $mdImage --saveScalarsAsFloat --outputLargestEigenvalueVolume $adImage --outputRDVolume $rdImage

    endif

end

echo applying brain masks

foreach DWIfile ($DATADIR/*/V*/mri/native/dMRI/dmriprep_0.5.7/*_101dir_QCed.nrrd)
    if (! -e $DWIfile) then
	continue
    endif

    set dwiFolder = $DWIfile:h:h
    set StripFolder = $dwiFolder/$FolderPrefix
    if (! -e $StripFolder) mkdir $StripFolder

    set baseName = $StripFolder/$DWIfile:t:s/_101dir_QCed.nrrd//
    set manualMaskNII = ${baseName}_brainmask_NoRim_edit.nii.gz
    set manualMask = ${baseName}_brainmask_NoRim_edit.nrrd
    set manualMaskSSNII = ${baseName}_brainmask_SynthStrip_edit.nii.gz
    set manualMaskSS = ${baseName}_brainmask_SynthStrip_edit.nrrd
    set dtiImage = ${baseName}_masked_final_DTI.nrrd

    if (-e $manualMaskNII && ! -e $manualMask) convertITKformats $manualMaskNII  $manualMask
    if (-e $manualMaskSSNII && ! -e $manualMaskSS)  convertITKformats $manualMaskSSNII $manualMaskSS
    
    if (! -e $manualMask && ! -e $manualMaskNII && -e $manualMaskSSNII) then
	#echo using $manualMaskSSNII
	set manualMaskNII = $manualMaskSSNII
	set manualMask = $manualMaskSS
    endif
    
    set VCFile = $DWIfile:h/VC*/*_101dir_QCed_QCed.nrrd
    if (! -e $VCFile[1]) then
	echo no VCfile $DWIfile
    endif
    
    if (! -e $manualMask) then
        echo no manual Mask $manualMask
        continue
    endif

    #echo doing $DWIfile

    if (! -e $dtiImage) then
	echo estimating DTI $DWIfile $manualMask $dtiImage
	$DTIestimCMD  --dwi_image $DWIfile -t 0 --tensor_output $dtiImage -m wls --correction nearest --brain_mask $manualMask
    endif
    
    set DWI_lowBvalOnly =  $DWIfile:r_lowShell.nrrd
    if (-e $DWIfile && ! -e $DWI_lowBvalOnly) then
	echo masking out lower shells only $DWI_lowBvalOnly
	DWIConvert_4.6.0 --inputVolume $DWIfile --outputVolume  $DWIfile:r.nii.gz --outputBVectors $DWIfile:r_bvec.txt --outputBValues $DWIfile:r_bval.txt --conversionMode NrrdToFSL
	echo conversion done
	echo filter_DWI_high_bval.script 1600  $DWIfile:r.nii.gz  $DWIfile:r_bvec.txt $DWIfile:r_bval.txt $DWIfile:h $DWIfile:t:r
	filter_DWI_high_bval.script 1600  $DWIfile:r.nii.gz  $DWIfile:r_bvec.txt $DWIfile:r_bval.txt $DWIfile:h $DWIfile:t:r
	echo X
	DWIConvert_4.6.0 --inputVolume $DWIfile:h/*_hbval_cropped.nii.gz  --outputVolume $DWI_lowBvalOnly:r.nhdr --inputBVectors $DWIfile:h/*_hbval_cropped.bvec --inputBValues $DWIfile:h/*_hbval_cropped.bval --conversionMode FSLToNrrd
	
	echo permuting axes
	unu permute -p 1 2 3 0 -i $DWI_lowBvalOnly:r.nhdr  | unu save -e gzip -f nrrd -o $DWI_lowBvalOnly:r_perm.nhdr
        grep -v "space directions:" $DWI_lowBvalOnly:r_perm.nhdr |  grep -v "space origin:" >! $DWI_lowBvalOnly:r_edit_perm.nhdr
        unu head $DWIfile | grep "space directions:" >> $DWI_lowBvalOnly:r_edit_perm.nhdr
        unu head $DWIfile | grep "space origin:" >> $DWI_lowBvalOnly:r_edit_perm.nhdr
	echo saving as nrrd
        unu save -i $DWI_lowBvalOnly:r_edit_perm.nhdr -o $DWI_lowBvalOnly -e gzip -f nrrd
        
	rm $DWIfile:r.nii.gz $DWIfile:r_bvec.txt $DWIfile:r_bval.txt $DWIfile:h/*_hbval_cropped*  $DWI_lowBvalOnly:r_edit_perm.nhdr $DWI_lowBvalOnly:r_perm.nhdr  $DWI_lowBvalOnly:r_perm.raw.gz $DWI_lowBvalOnly:r.nhdr $DWI_lowBvalOnly:r.raw.gz
	
    endif
    
    set dtiImage = ${baseName}_masked_final_lowShell_DTI.nrrd
    if (-e $DWI_lowBvalOnly && -e $manualMask && ! -e $dtiImage) then
	echo estimating DTI $dtiImage 
	echo $DTIestimCMD --dwi_image $DWI_lowBvalOnly -t 0 --tensor_output $dtiImage -m wls --correction nearest --brain_mask $manualMask
	$DTIestimCMD --dwi_image $DWI_lowBvalOnly -t 0 --tensor_output $dtiImage -m wls --correction nearest --brain_mask $manualMask
    endif
end


echo applying edited brain masks to VC data

foreach DWIfile ($DATADIR/*/V*/mri/native/dMRI/dmriprep_0.5.7/VC*/*_101dir_QCed_QCed.nrrd)
    if (! -e $DWIfile) then
	continue
    endif

    if (-e $DWIfile:r_EXCLUDE.nrrd) then
	echo $DWIfile excluded - skipping
	continue
    endif

    set dwiFolder = $DWIfile:h:h:h
    set StripFolder = $dwiFolder/$FolderPrefix
    if (! -e $StripFolder) mkdir $StripFolder

    set baseName = $StripFolder/$DWIfile:t:s/_101dir_QCed_QCed.nrrd//
    set manualMaskNII = ${baseName}_brainmask_NoRim_edit.nii.gz
    set manualMask = ${baseName}_brainmask_NoRim_edit.nrrd
    set manualMaskSSNII = ${baseName}_brainmask_SynthStrip_edit.nii.gz
    set manualMaskSS = ${baseName}_brainmask_SynthStrip_edit.nrrd
    set dtiImage = ${baseName}_masked_final_DTI.nrrd

    if (-e $manualMaskNII && ! -e $manualMask) convertITKformats $manualMaskNII  $manualMask

    if (! -e $manualMask && ! -e $manualMaskNII && -e $manualMaskSSNII) then
	#echo using $manualMaskSSNII
	convertITKformats $manualMaskSSNII $manualMaskSS
	set manualMaskNII = $manualMaskSSNII
	set manualMask = $manualMaskSS
    endif
    
    if (! -e $manualMask) then
        echo no manual Mask $manualMask
        continue
    endif

    #echo doing $DWIfile

    if (! -e $dtiImage) then
	echo estimating DTI $DWIfile $manualMask $dtiImage
	$DTIestimCMD  --dwi_image $DWIfile -t 0 --tensor_output $dtiImage -m wls --correction nearest --brain_mask $manualMask
    endif

    set DWI_lowBvalOnly =  $DWIfile:r_lowShell.nrrd
    if (-e $DWIfile && ! -e $DWI_lowBvalOnly) then
	echo masking out lower shells only $DWI_lowBvalOnly
	DWIConvert_4.6.0 --inputVolume $DWIfile --outputVolume  $DWIfile:r.nii.gz --outputBVectors $DWIfile:r_bvec.txt --outputBValues $DWIfile:r_bval.txt --conversionMode NrrdToFSL
	echo conversion done
	echo filter_DWI_high_bval.script 1600  $DWIfile:r.nii.gz  $DWIfile:r_bvec.txt $DWIfile:r_bval.txt $DWIfile:h $DWIfile:t:r
	filter_DWI_high_bval.script 1600  $DWIfile:r.nii.gz  $DWIfile:r_bvec.txt $DWIfile:r_bval.txt $DWIfile:h $DWIfile:t:r
	DWIConvert_4.6.0 --inputVolume $DWIfile:h/*_hbval_cropped.nii.gz  --outputVolume $DWI_lowBvalOnly:r.nhdr --inputBVectors $DWIfile:h/*_hbval_cropped.bvec --inputBValues $DWIfile:h/*_hbval_cropped.bval --conversionMode FSLToNrrd
	echo permuting axes
	unu permute -p 1 2 3 0 -i $DWI_lowBvalOnly:r.nhdr  | unu save -e gzip -f nrrd -o $DWI_lowBvalOnly:r_perm.nhdr
        grep -v "space directions:" $DWI_lowBvalOnly:r_perm.nhdr |  grep -v "space origin:" >! $DWI_lowBvalOnly:r_edit_perm.nhdr
        unu head $DWIfile | grep "space directions:" >> $DWI_lowBvalOnly:r_edit_perm.nhdr
        unu head $DWIfile | grep "space origin:" >> $DWI_lowBvalOnly:r_edit_perm.nhdr
	echo saving as nrrd
        unu save -i $DWI_lowBvalOnly:r_edit_perm.nhdr -o $DWI_lowBvalOnly -e gzip -f nrrd

	rm $DWIfile:r.nii.gz $DWIfile:r_bvec.txt $DWIfile:r_bval.txt $DWIfile:h/*_hbval_cropped*  $DWI_lowBvalOnly:r_edit_perm.nhdr $DWI_lowBvalOnly:r_perm.nhdr  $DWI_lowBvalOnly:r_perm.raw.gz $DWI_lowBvalOnly:r.nhdr $DWI_lowBvalOnly:r.raw.gz
	
    endif

    set dtiImage = ${baseName}_masked_finalVC_lowShell_DTI.nrrd
    if (-e $DWI_lowBvalOnly && -e $manualMask && ! -e $dtiImage) then
	echo estimating DTI $dtiImage 
	echo $DTIestimCMD --dwi_image $DWI_lowBvalOnly -t 0 --tensor_output $dtiImage -m wls --correction nearest --brain_mask $manualMask
	$DTIestimCMD --dwi_image $DWI_lowBvalOnly -t 0 --tensor_output $dtiImage -m wls --correction nearest --brain_mask $manualMask
    endif

end

#computing volume of brainMasks

foreach brainmask ($DATADIR/*/V*/mri/native/dMRI/$FolderPrefix/*brainmask*_edit.nrrd)

    set volumeFile = $brainmask:r_volume.csv
    if (! -e $volumeFile) then
	echo computing volume of Brainmask $volumeFile

	ImageStat $brainmask -outbase $brainmask:r -histo
	set volume = (`grep VolumeSumFullVoxels $brainmask:r_vol.txt`)
	echo "$brainmask:t:s/_brainmask_NoRim_edit.nrrd//:s/_brainmask_SynthStrip_edit.nrrd//,,$brainmask:h:h:h:h:h:h:t,$brainmask:h:h:h:h:h:t,$volume[3]" >! $volumeFile
	
    endif

end

cat $DATADIR/*/V*/mri/native/dMRI/$FolderPrefix/*_volume.csv >! $ProcessDIR/BrainmaskVolume.csv
text_subst.pl ";" "" $ProcessDIR/BrainmaskVolume.csv

exit


set csvReport = $ProcessDIR/AllFinalDTI.csv
ls -1 $DATADIR/*/VSA*/mri/native/dMRI/$FolderPrefix/*_lowShell_DTI.nrrd >! $csvReport 

exit
